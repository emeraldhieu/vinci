openapi: 3.0.3
info:
  title: Order - OpenAPI 3.0
  description: Order API that manages shopping orders.
  version: 1.0.11
servers:
  - url: http://localhost:8080
tags:
  - name: Orders
    description: Everything about order
paths:
  /orders:
    put:
      tags:
        - Orders
      summary: Update an existing order
      description: Update an existing order by Id
      operationId: updateOrder
      requestBody:
        description: Update an existent order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
        '405':
          description: Validation exception

    post:
      tags:
        - Orders
      summary: Create a new order
      description: Create a new order
      operationId: createOrder
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input

  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found

    delete:
      tags:
        - Orders
      summary: Deletes an order
      description: delete an order
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: Order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid order value

components:
  schemas:
    Order:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        userId:
          type: integer
          format: int64
          example: 42
        products:
          type: array
          items:
            type: string
          example: [ "pizza", "burger", "spaghetti" ]
