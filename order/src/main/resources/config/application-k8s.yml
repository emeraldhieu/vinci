spring:
  datasource:
    url: jdbc:postgresql://${application.db.host}:${application.db.port}/${application.db.name}
    username: ${application.db.user}
    password: ${application.db.password}
  jpa:
    show-sql: true
    database: postgresql
  liquibase:
    # Drop the existing to repopulate the whole database
    # drop-first: true
    # Used for development to update the changelogs continuously
    clear-checksums: true
  # Only "spring.kafka.bootstrap-servers" works.
  # If "spring.kafka.producer.bootstrap-servers" was used, there would be an error "Connection to node -1 (localhost/127.0.0.1:9092) could not be established"
  # It's worth to look into Kafka's autoconfiguration to see why.
  kafka:
    bootstrap-servers: "kafka:29092"
    properties:
      schema.registry.url: http://schema-registry:8081
logging:
  level:
    # Enable Liquibase logs for development
    liquibase.database: DEBUG
    liquibase.changelog: DEBUG
    # Log to see liquibase's SQL
    liquibase.executor.jvm.[JdbcExecutor$ExecuteStatementCallback]: DEBUG
    # Log Kafka
    org.springframework.kafka.listener: DEBUG
    org.springframework.kafka.listener.adapter: INFO
server:
  servlet:
    # Set context path for K8s ingress rules to match different services
    # See https://kubernetes.io/docs/concepts/services-networking/ingress/#simple-fanout
    # Otherwise, Ingress won't find services
    # See https://stackoverflow.com/questions/76061215/route-different-paths-to-different-services
    context-path: /order
application:
  db:
    host: "Please set APPLICATION_DB_HOST in k8s config map"
    port: "Please set APPLICATION_DB_PORT in k8s config map"
    name: "Please set APPLICATION_DB_NAME in k8s config map"
    user: "Please set APPLICATION_DB_USER in k8s config map"
    password: "Please set APPLICATION_DB_PASSWORD in k8s config map"
